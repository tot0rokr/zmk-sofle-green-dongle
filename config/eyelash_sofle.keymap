#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
    trigger-period-ms = <0>;
};

&mmv {
    time-to-max-speed-ms = <0>; // Default 500
    acceleration-exponent = <0>; // Default 0
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    homerow_mods: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        flavor = "tap-preferred";
        quick-tap-ms = <200>;
    };

    layer_quick_tab: layer_quick_tab {
        compatible = "zmk,behavior-hold-tap";
        label = "LAYER_QUICK_TAB";
        bindings = <&mo>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <300>;
        flavor = "hold-preferred";
        quick-tap-ms = <130>;
        require-prior-idle-ms = <125>;
    };

    mouse_click_key: mouse_click_key {
        compatible = "zmk,behavior-hold-tap";
        label = "MOUSE_CLICK_KEY";
        bindings = <&mkp>, <&mkp>;

        #binding-cells = <2>;
        tapping-term-ms = <150>;
    };

    knob_mouse_scroll: knob_mouse_scroll {
        compatible = "zmk,behavior-sensor-rotate";
        label = "KNOB_MOUSE_SCROLL";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
    };

    mouse_click_tab_dance: mouse_click_tab_dance {
        compatible = "zmk,behavior-tap-dance";
        label = "MOUSE_CLICK_TAB_DANCE";
        #binding-cells = <0>;
        bindings = <&mkp LCLK>, <&mouse_click_key RCLK LCLK>;
    };

    layer_hold_tap: layer_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "LAYER_HOLD_TAP";
        bindings = <&mo>, <&tog>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
    };

    space_shift_homerow: space_shift_homerow {
        compatible = "zmk,behavior-hold-tap";
        label = "SPACE_SHIFT_HOMEROW";
        bindings = <&mo>, <&kp>;

        #binding-cells = <2>;
        flavor = "tap-unless-interrupted";
        tapping-term-ms = <200>;
    };

    homerow_retro_mods: homerow_retro_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_RETRO_MODS";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        flavor = "tap-preferred";
        quick-tap-ms = <200>;
        retro-tap;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        softoff_combo {
            bindings = <&soft_off>;
            key-positions = <14 28 40 24 36 50>;
            timeout-ms = <100>;
        };

        momentary_bluetooth_layer_combo {
            bindings = <&mo 8>;
            key-positions = <59 60>;
        };

        backspace_combo {
            bindings = <&kp BACKSPACE>;
            key-positions = <34 35>;
            layers = <0 2>;
            timeout-ms = <30>;
        };

        momentary_function_layer_combo {
            bindings = <&mo 7>;
            key-positions = <57 56>;
        };

        enter_combo {
            bindings = <&kp ENTER>;
            key-positions = <48 49>;
            layers = <2 0>;
            timeout-ms = <30>;
        };

        backspace2_combo {
            bindings = <&kp BACKSPACE>;
            key-positions = <30 29>;
            layers = <0 2>;
            timeout-ms = <30>;
        };

        enter2_combo {
            bindings = <&kp ENTER>;
            key-positions = <41 42>;
            layers = <0 2>;
            timeout-ms = <30>;
        };

        esc_combo {
            bindings = <&kp ESC>;
            key-positions = <15 16>;
            layers = <0 2>;
            timeout-ms = <30>;
        };
    };

    macros {
        mouse_double_click: mouse_double_click {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mkp LCLK>, <&macro_wait_time 25>, <&mkp LCLK>;

            label = "MOUSE_DOUBLE_CLICK";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        NormalLayer {
            bindings = <
&tog 10     &kp N1        &kp N2    &kp N3                    &kp N4                                     &kp N5                 &mmv MOVE_Y(-200)  &kp N6                   &kp N7                                 &kp N8                    &kp N9    &kp N0      &tog 11
&kp TAB     &kp Q         &kp W     &kp E                     &kp R                                      &kp T                  &mmv MOVE_Y(200)   &kp Y                    &kp U                                  &kp I                     &kp O     &kp P       &none
&kp LCTRL   &kp A         &kp S     &kp D                     &kp F                                      &kp G                  &mmv MOVE_X(-200)  &kp H                    &kp J                                  &kp K                     &kp L     &kp SEMI    &kp APOS
&kp LSHFT   &kp Z         &kp X     &kp C                     &kp V                                      &kp B                  &mmv MOVE_X(200)   &kp N                    &kp M                                  &kp COMMA                 &kp DOT   &kp SLASH   &kp RSHFT
&kp C_MUTE  &kp LEFT_WIN  &kp LALT  &layer_quick_tab 3 SPACE  &homerow_retro_mods LEFT_SHIFT LEFT_SHIFT  &layer_hold_tap 6 4    &mkp LCLK          &layer_quick_tab 5 RALT  &homerow_mods RIGHT_SHIFT RIGHT_SHIFT  &layer_quick_tab 1 SPACE  &kp RALT  &kp DELETE
            >;

            sensor-bindings = <&knob_mouse_scroll>;
            display-name = "NormalLayer";
        };

        RHomerowLayer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans     &trans    &trans     &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans     &trans    &trans     &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp LSHFT  &kp LALT  &kp LCTRL  &kp LGUI  &kp TAB
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans     &trans    &trans     &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans     &trans    &trans     &trans
            >;

            label = "RHomerowLayer";
        };

        DuplicatedNormalLayer {
            display-name = "NormalLayer";
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &trans  &kp N6  &kp N7  &kp N8     &kp N9   &kp N0     &none
&kp TAB    &kp Q   &kp W   &kp E   &kp R   &kp T     &trans  &kp Y   &kp U   &kp I      &kp O    &kp P      &none
&kp LCTRL  &kp A   &kp S   &kp D   &kp F   &kp G     &trans  &kp H   &kp J   &kp K      &kp L    &kp SEMI   &kp APOS
&kp LSHFT  &kp Z   &kp X   &kp C   &kp V   &kp B     &trans  &kp N   &kp M   &kp COMMA  &kp DOT  &kp SLASH  &kp RSHFT
&trans     &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans     &trans   &trans
            >;

            sensor-bindings = <&knob_mouse_scroll>;
        };

        LHomerowLayer {
            bindings = <
&trans   &trans    &trans     &trans    &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans   &trans    &trans     &trans    &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB  &kp LGUI  &kp LCTRL  &kp LALT  &kp LSHFT  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans   &trans    &trans     &trans    &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans   &trans    &trans     &trans    &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "LHomerowLayer";
        };

        JoystickLayer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_Y(-500)  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_Y(500)   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_X(-500)  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_X(500)   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans             &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&knob_mouse_scroll>;
            label = "JoystickLayer";
        };

        RThumbLayer {
            bindings = <
&none  &none                  &none                &none                  &none                  &none                     &msc SCRL_UP     &none                   &none                  &none                   &none                  &none                  &none
&none  &homerow_mods EXCL N1  &homerow_mods AT N2  &homerow_mods HASH N3  &homerow_mods DLLR N4  &homerow_mods PRCNT N5    &msc SCRL_DOWN   &homerow_mods CARET N6  &homerow_mods AMPS N7  &homerow_mods ASTRK N8  &homerow_mods LPAR N9  &homerow_mods RPAR N0  &none
&none  &none                  &none                &none                  &none                  &none                     &msc SCRL_LEFT   &kp LEFT                &kp DOWN               &kp UP                  &kp RIGHT              &kp INS                &none
&none  &none                  &kp C_PREV           &kp C_PLAY_PAUSE       &kp C_NEXT             &none                     &msc SCRL_RIGHT  &kp HOME                &kp PG_DN              &kp PG_UP               &kp END                &kp CAPS               &none
&none  &trans                 &trans               &trans                 &trans                 &trans                    &none            &trans                  &trans                 &trans                  &trans                 &trans
            >;

            display-name = "RThumbLayer";
            sensor-bindings = <&scroll_encoder>;
        };

        LThumbLayer {
            bindings = <
&trans  &trans     &trans     &trans     &trans     &trans       &trans     &trans  &trans  &trans  &trans            &trans             &trans
&trans  &trans     &trans     &trans     &kp LC(R)  &trans       &trans     &kp N7  &kp N8  &kp N9  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
&trans  &kp LC(A)  &kp LC(S)  &kp LC(D)  &kp LC(F)  &trans       &trans     &kp N4  &kp N5  &kp N6  &kp MINUS         &kp EQUAL          &kp GRAVE
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(B)    &trans     &kp N1  &kp N2  &kp N3  &trans            &kp BSLH           &trans
&trans  &mkp RCLK  &mkp MCLK  &mkp MB4   &mkp MB5   &trans       &mkp RCLK  &trans  &kp N0  &trans  &trans            &trans
            >;

            display-name = "LThumbLayer";
            sensor-bindings = <&scroll_encoder>;
        };

        FunctionLayer {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none          &none   &none    &none    &none    &none
&none  &none  &none  &none  &none  &none    &none  &none          &kp F1  &kp F2   &kp F3   &kp F4   &none
&none  &none  &none  &none  &none  &none    &none  &kp PAGE_UP    &kp F5  &kp F6   &kp F7   &kp F8   &none
&none  &none  &none  &none  &none  &none    &none  &kp PAGE_DOWN  &kp F9  &kp F10  &kp F11  &kp F12  &none
&none  &none  &none  &none  &none  &none    &none  &none          &none   &kp F13  &kp F14  &kp F15
            >;

            label = "FunctionLayer";
        };

        BluetoothLayer {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &none  &none  &none       &none      &none        &none
&none  &bt BT_CLR    &bt BT_CLR_ALL  &none         &none         &none           &mmv MOVE_DOWN   &none  &none  &none       &none      &none        &none
&none  &out OUT_USB  &out OUT_BLE    &none         &none         &none           &mmv MOVE_LEFT   &none  &none  &none       &none      &none        &none
&none  &none         &none           &none         &none         &none           &mmv MOVE_RIGHT  &none  &none  &sys_reset  &soft_off  &bootloader  &none
&none  &none         &none           &none         &none         &none           &mkp LCLK        &none  &none  &none       &none      &none
            >;

            display-name = "BluetoothLayer";
            sensor-bindings = <&scroll_encoder>;
        };

        FunctionLayer_backup {
            bindings = <
&none       &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10  &none
&none       &none            &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &none    &none
&none       &none            &none           &none            &none            &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &none    &none
&none       &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12  &none
&kp C_MUTE  &none            &none           &none            &none            &none              &mkp LCLK        &none            &none            &none       &none      &none
            >;

            display-name = "FunctionLayer";
            sensor-bindings = <&scroll_encoder>;
        };

        LeftHandRight {
            bindings = <
&tog 10         &kp N6    &kp N7    &kp N8     &kp N9     &kp N0      &none  &none  &none  &none  &none  &none  &none
&kp TAB         &kp Y     &kp U     &kp I      &kp O      &kp P       &none  &none  &none  &none  &none  &none  &none
&kp LCTRL       &kp H     &kp J     &kp K      &kp L      &kp SEMI    &none  &none  &none  &none  &none  &none  &none
&kp LEFT_SHIFT  &kp N     &kp M     &kp COMMA  &kp DOT    &kp FSLH    &none  &none  &none  &none  &none  &none  &none
&none           &kp LGUI  &kp LALT  &none      &kp LSHFT  &none       &none  &none  &none  &none  &none  &none
            >;

            label = "LeftHandRight";
        };

        RightHandLeft {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5          &tog 11
&none  &none  &none  &none  &none  &none    &none  &kp Q   &kp W   &kp E   &kp R   &kp T           &none
&none  &none  &none  &none  &none  &none    &none  &kp A   &kp S   &kp D   &kp F   &kp G           &none
&none  &none  &none  &none  &none  &none    &none  &kp Z   &kp X   &kp C   &kp V   &kp B           &none
&none  &none  &none  &none  &none  &none    &none  &none   &none   &none   &none   &kt LEFT_SHIFT
            >;

            label = "RightHandLeft";
        };
    };
};
